/*
 2013 Jason Mulligan
 @license BSD-3 <https://raw.github.com/avoidwork/keysort/master/LICENSE>
 @link http://avoidwork.github.io/keysort/
 @module keysort
 @version 0.1.0
*/
(function(h){function k(a,c){var e=a.length,d;for(d=0;d<e&&!1!==c.call(a,a[d],d);d++);return a}function l(a,c){c=c||",";return a.replace(/^(\s+|\t+)|(\s+|\t+)$/g,"").split(RegExp("\\s*"+c+"\\s*"))}function g(a,c,e,d){c=c.replace(/\s*asc/g,"").replace(/\s*desc/ig," desc");c=l(c).map(function(b){return b.split(" ")});var f=[];d=!0===d;e=e&&""!==e?"."+e:"";k(c,function(b){var c="desc"===b[1],a="a"+e+'["'+b[0]+'"]';b="b"+e+'["'+b[0]+'"]';d&&(f.push(a+" = isNaN(Number("+a+")) ? "+a+" : Number("+a+");"),
f.push(b+" = isNaN(Number("+b+")) ? "+b+" : Number("+b+");"));c?(f.push("if ( "+a+" < "+b+" ) return 1;"),f.push("if ( "+a+" > "+b+" ) return -1;")):(f.push("if ( "+a+" < "+b+" ) return -1;"),f.push("if ( "+a+" > "+b+" ) return 1;"))});f.push("else return 0;");return a.sort(new Function("a","b",f.join("\n")))}"undefined"!==typeof exports?module.exports=g:"function"===typeof define?define(function(){return g}):h.keysort=g})(this);
//@ sourceMappingURL=keysort.map

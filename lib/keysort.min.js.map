{"version":3,"sources":["keysort.js"],"names":["global","each","obj","fn","nth","length","i","call","explode","arg","arguments","undefined","replace","split","RegExp","sort","query","sub","queries","map","sorts","desc","y","x","s","e","notDot","test","braceS","braceE","push","Function","join","exports","module","define","amd","keysort"],"mappings":";;AAAA,cAUA,SAAWA,GAiBV,QAASC,GAAKC,EAAKC,GAIlB,IAHA,GAAIC,GAAMF,EAAIG,OACVC,GAAI,IAECA,EAAIF,GACRD,EAAGI,KAAKL,EAAKA,EAAII,GAAIA,MAAO,IAKjC,MAAOJ,GAWR,QAASM,GAAQN,GAChB,GAAIO,GAAMC,UAAUL,OAAS,GAAsBM,SAAjBD,UAAU,GAAmBA,UAAU,GAAK,GAE9E,OAAOR,GAAIU,QAAQ,yBAA0B,IAAIC,MAAM,GAAIC,QAAO,OAASL,EAAM,SAYlF,QAASM,GAAKb,EAAKc,GAClB,GAAIC,GAAMP,UAAUL,OAAS,GAAsBM,SAAjBD,UAAU,GAAmBA,UAAU,GAAK,GAE1EQ,EAAUV,EAAQQ,EAAMJ,QAAQ,WAAY,IAAIA,QAAQ,YAAa,UAAUO,IAAI,SAAUb,GAChG,MAAOA,GAAEO,MAAM,OAEZO,IA8BJ,OA5BIH,IAAe,KAARA,IACVA,EAAM,IAAMA,GAGbhB,EAAKiB,EAAS,SAAUZ,GACvB,GAAIe,GAAgB,SAATf,EAAE,GACTgB,EAAID,EAAO,GAAI,EACfE,EAAIF,GAAO,EAAK,EAEhBG,EAAI,IACJC,EAAI,EAEJC,GAAOC,KAAKrB,EAAE,MACjBkB,EAAII,EACJH,EAAII,GAGLT,EAAMU,KAAK,QAAUb,EAAMO,EAAIlB,EAAE,GAAKmB,EAAI,sBAAwBR,EAAMO,EAAIlB,EAAE,GAAKmB,EAAI,qBACvFL,EAAMU,KAAK,UAAYb,EAAMO,EAAIlB,EAAE,GAAKmB,EAAI,OAASR,EAAMO,EAAIlB,EAAE,GAAKmB,EAAI,YAAcH,EAAI,KAC5FF,EAAMU,KAAK,UAAYb,EAAMO,EAAIlB,EAAE,GAAKmB,EAAI,OAASR,EAAMO,EAAIlB,EAAE,GAAKmB,EAAI,YAAcF,EAAI,KAC5FH,EAAMU,KAAK,YACXV,EAAMU,KAAK,UAAYb,EAAMO,EAAIlB,EAAE,GAAKmB,EAAI,0BAA4BH,EAAI,KAC5EF,EAAMU,KAAK,UAAYb,EAAMO,EAAIlB,EAAE,GAAKmB,EAAI,0BAA4BF,EAAI,KAC5EH,EAAMU,KAAK,OAGZV,EAAMU,KAAK,aAEJ5B,EAAIa,KAAK,GAAIgB,UAAS,IAAK,IAAKX,EAAMY,KAAK,QAtFnD,GAAIN,GAAS,OACTE,EAAS,KACTC,EAAS,IAwFU,oBAAZI,SACVC,OAAOD,QAAUlB,EACW,kBAAXoB,SAAyBA,OAAOC,IACjDD,OAAO,WACN,MAAOpB,KAGRf,EAAOqC,QAAUtB,GAEhBJ","file":"keysort.min.js","sourcesContent":["\"use strict\";\n\n/**\n * Sorts an Array of Objects with SQL ORDER BY clause\n *\n * @author [object Object]\n * @copyright 2017\n * @license BSD-3-Clause\n * @version 1.0.0\n */\n(function (global) {\n\t\"use strict\";\n\n\tvar notDot = /-|\\s/,\n\t    braceS = \"[\\\"\",\n\t    braceE = \"\\\"]\";\n\n\t/**\n  * Iterates obj and executes fn\n  *\n  * Parameters for fn are 'value', 'index'\n  *\n  * @method each\n  * @param  {Array}    obj Array to iterate\n  * @param  {Function} fn  Function to execute on index values\n  * @return {Array}        Array\n  */\n\tfunction each(obj, fn) {\n\t\tvar nth = obj.length;\n\t\tvar i = -1;\n\n\t\twhile (++i < nth) {\n\t\t\tif (fn.call(obj, obj[i], i) === false) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\t/**\n  * Splits a string on comma, or a parameter, and trims each value in the resulting Array\n  *\n  * @method explode\n  * @param  {String} obj String to capitalize\n  * @param  {String} arg String to split on\n  * @return {Array}      Array of the exploded String\n  */\n\tfunction explode(obj) {\n\t\tvar arg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \",\";\n\n\t\treturn obj.replace(/^(\\s+|\\t+)|(\\s+|\\t+)$/g, \"\").split(new RegExp(\"\\\\s*\" + arg + \"\\\\s*\"));\n\t}\n\n\t/**\n  * Sorts an Array based on key values, like an SQL ORDER BY clause\n  *\n  * @method sort\n  * @param  {Array}  obj   Array to sort\n  * @param  {String} query Sort query, e.g. \"name, age desc, country\"\n  * @param  {String} sub   [Optional] Key which holds data, e.g. \"{data: {}}\" = \"data\"\n  * @return {Array}        Sorted Array\n  */\n\tfunction sort(obj, query) {\n\t\tvar sub = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n\t\tvar queries = explode(query.replace(/\\s*asc/ig, \"\").replace(/\\s*desc/ig, \" desc\")).map(function (i) {\n\t\t\treturn i.split(\" \");\n\t\t}),\n\t\t    sorts = [];\n\n\t\tif (sub && sub !== \"\") {\n\t\t\tsub = \".\" + sub;\n\t\t}\n\n\t\teach(queries, function (i) {\n\t\t\tvar desc = i[1] === \"desc\",\n\t\t\t    y = desc ? 1 : -1,\n\t\t\t    x = desc ? -1 : 1;\n\n\t\t\tvar s = \".\",\n\t\t\t    e = \"\";\n\n\t\t\tif (notDot.test(i[0])) {\n\t\t\t\ts = braceS;\n\t\t\t\te = braceE;\n\t\t\t}\n\n\t\t\tsorts.push(\"if (a\" + sub + s + i[0] + e + \" !== undefined && b\" + sub + s + i[0] + e + \" !== undefined) {\");\n\t\t\tsorts.push(\"  if (a\" + sub + s + i[0] + e + \" < b\" + sub + s + i[0] + e + \") return \" + y + \";\");\n\t\t\tsorts.push(\"  if (a\" + sub + s + i[0] + e + \" > b\" + sub + s + i[0] + e + \") return \" + x + \";\");\n\t\t\tsorts.push(\"} else {\");\n\t\t\tsorts.push(\"  if (a\" + sub + s + i[0] + e + \" !== undefined) return \" + y + \";\");\n\t\t\tsorts.push(\"  if (b\" + sub + s + i[0] + e + \" !== undefined) return \" + x + \";\");\n\t\t\tsorts.push(\"}\");\n\t\t});\n\n\t\tsorts.push(\"return 0;\");\n\n\t\treturn obj.sort(new Function(\"a\", \"b\", sorts.join(\"\\n\")));\n\t}\n\n\t// Node, AMD & window supported\n\tif (typeof exports !== \"undefined\") {\n\t\tmodule.exports = sort;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn sort;\n\t\t});\n\t} else {\n\t\tglobal.keysort = sort;\n\t}\n})(undefined);\n"]}